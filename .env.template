# Web app port
WEB_PORT=4200

# Gallery app port
GALLERY_PORT=5200

# Backend API port
API_PORT=8000

# tus service port
TUSD_PORT=8080

##### PostgreSQL connection string
# - Use this if apps are running inside of Docker
# DATABASE_URL=postgres://postgres:postgres@valley-postgres:5432/valley
# - Use this if apps are running outside of Docker
DATABASE_URL=postgres://postgres:postgres@localhost:5432/valley

# PostgreSQL database credentials
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres

##### S3-like storage (ex. minio) connection details
##### They are passed in docker-compose.yml file as startup seed
# - Use this if apps are running inside of Docker
# AWS_ENDPOINT=http://valley-minio:9000
# - Use this if apps are running outside of Docker
AWS_ENDPOINT=http://localhost:9000
AWS_REGION=ru-1
AWS_ACCESS_KEY_ID=minioadmin
AWS_SECRET_ACCESS_KEY=minioadmin

# Upload bucket for files
UPLOAD_BUCKET=files

# Minio storage credentials
MINIO_ROOT_USER=minioadmin
MINIO_ROOT_PASSWORD=minioadmin

##### Redis connection string
# - Use this if apps are running inside of Docker
# REDIS_URL=redis://valley-redis:6379
# - Use this if apps are running outside of Docker
REDIS_URL=redis://localhost:6379

# JWT secret key (used as salt)
JWT_KEY=CHANGE_ME

# Do not change, fixes libvips alloc warning
VIPS_CONCURRENCY=$(nproc 2>/dev/null || sysctl -n hw.logicalcpu)

#####
##### NextJS variables
#####
# URL pointing at backend's API
NEXT_PUBLIC_API_URL=http://localhost:${API_PORT}
# URL pointing at tus service
NEXT_PUBLIC_TUSD_URL=http://localhost:${TUSD_PORT}/files