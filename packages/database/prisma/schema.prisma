generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x", "debian-openssl-3.0.x", "linux-musl", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  username     String    @unique
  password     String
  refreshToken String?
  projects     Project[]
}

model Project {
  id                 Int                 @id @default(autoincrement())
  title              String
  url                String
  totalFiles         Int                 @default(0)
  // Total size is in bytes
  totalSize          BigInt              @default(0)
  dateCreated        DateTime            @default(now())
  dateUpdated        DateTime            @updatedAt
  dateShot           DateTime            @default(now())
  // "0" means stored indefinitely, unix timestamps in string format are supported
  storedUntil        String              @default("0")
  language           String              @default("en")
  protected          Boolean             @default(false)
  password           String?
  folders            Folder[]
  translationStrings TranslationStrings?

  User                 User? @relation(fields: [userId], references: [id])
  userId               Int?
  translationStringsId Int?
}

model Folder {
  id              Int     @id @default(autoincrement())
  title           String
  isDefaultFolder Boolean
  description     String?
  totalFiles      Int     @default(0)
  // Total size is in bytes
  totalSize       BigInt  @default(0)
  files           File[]

  Project   Project @relation(fields: [projectId], references: [id])
  projectId Int
}

model File {
  id           Int     @id @default(autoincrement())
  bucket       String
  key          String
  thumbnailKey String?
  exifMetadata Json
  name         String
  type         String
  size         Int

  Folder   Folder @relation(fields: [folderId], references: [id])
  folderId Int
}

model TranslationStrings {
  id         Int    @id @default(autoincrement())
  name       String
  occupation String
  hint       String

  Project   Project @relation(fields: [projectId], references: [id])
  projectId Int     @unique
}
