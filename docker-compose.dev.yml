x-defaults: &defaults
  init: true
  tty: true
  logging:
    driver: 'json-file'
    options:
      max-size: '20m'
      max-file: '3'
  networks:
    - valley_network

# Settings and configurations that are common for all containers
x-minio-common: &minio-common
  image: minio/minio
  command: server --console-address ":9001" /data/minio
  expose:
    - '9000'
    - '9001'
  env_file:
    - .env
  healthcheck:
    test: ['CMD', 'mc', 'ready', 'local']
    interval: 5s
    timeout: 5s
    retries: 5
  logging:
    driver: 'json-file'
    options:
      max-size: '20m'
      max-file: '3'
  init: true
  tty: true
  networks:
    - valley_network

name: valley

services:
  minio:
    <<: *minio-common
    hostname: minio
    volumes:
      - data:/data

  postgres:
    <<: *defaults
    container_name: valley-postgres
    image: postgres:16-alpine
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres:/docker-entrypoint-initdb.d
    ports:
      - '5432:5432'
    restart: always
    healthcheck:
      test: ['CMD', 'pg_isready -d valley -U ${DB_USER}']
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    <<: *defaults
    container_name: valley-redis
    image: redis:latest
    env_file:
      - .env
    restart: always
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/data
    environment:
      - REDIS_PORT=6379
      - REDIS_DATABASES=16

  nginx:
    <<: *defaults
    image: nginx:1.19.2-alpine
    hostname: nginx
    volumes:
      - ./nginx/nginx-dev.conf:/etc/nginx/nginx.conf:ro
    ports:
      - '9000:9000'
      - '9001:9001'
    depends_on:
      - minio

  # Creates minio bucket on startup if it was not created before
  createbuckets:
    <<: *defaults
    image: minio/mc:latest
    env_file:
      - .env
    depends_on:
      - minio
      - nginx
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://nginx:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
      /usr/bin/mc mb myminio/${AWS_BUCKET};
      /usr/bin/mc anonymous set private myminio/${AWS_BUCKET};
      exit 0;
      "

volumes:
  data:
  redis-data:
  postgres-data:
  tusd:
networks:
  valley_network:
